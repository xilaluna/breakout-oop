(()=>{"use strict";const t=class{constructor(t,s,i,h,e){this.x=t,this.y=s,this.width=i,this.height=h,this.color=e}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},s=class extends t{constructor(t,s,i,h,e,l){super(t,s,2*i,2*i,h),this.radius=i,this.dx=e,this.dy=l,this.piTwo=2*Math.PI}move(){this.moveBy(this.dx,this.dy)}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,this.piTwo),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class extends t{constructor(t,s,i,h,e){super(t,s,i,h,e),this.status=1}},h=class extends t{constructor(t,s,i,h,e){super(t,s,0,0,i),this.text=h,this.font=e,this.value=0}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}};new class{constructor(e){this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.ballRadius=10,this.brickRowCount=5,this.brickColumnCount=3,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.paddleHeight=10,this.paddleWidth=75,this.color="#0095DD",this.ARROW_RIGHT="ArrowRight",this.ARROW_LEFT="ArrowLeft",this.paddleXStart=(this.canvas.width-this.paddleWidth)/2,this.paddleYStart=this.canvas.height-this.paddleHeight,this.ball=new s(0,0,this.ballRadius,this.color,0,0),this.bricks=new class{constructor(t,s,i,h,e,l,a,d){this.cols=t,this.rows=s,this.width=i,this.height=h,this.padding=e,this.offsetLeft=l,this.offsetTop=a,this.color=d,this.bricks=[],this.init()}init(){for(let t=0;t<this.cols;t+=1){this.bricks[t]=[];for(let s=0;s<this.rows;s+=1){const h=(this.width+this.padding)*s+this.offsetLeft,e=(this.height+this.padding)*t+this.offsetTop;this.bricks[t][s]=new i(h,e,this.width,this.height,this.color)}}}render(t){for(let s=0;s<this.cols;s+=1)for(let i=0;i<this.rows;i+=1){const h=this.bricks[s][i];1===h.status&&h.render(t)}}}(this.brickColumnCount,this.brickRowCount,this.brickWidth,this.brickHeight,this.brickPadding,this.brickOffsetLeft,this.brickOffsetTop,this.color),this.paddle=new t(this.paddleXStart,this.paddleYStart,this.paddleWidth,this.paddleHeight,this.color),this.scoreLabel=new h(8,20,this.color,"Score: ","16px Arial"),this.livesLabel=new h(this.canvas.width-65,20,this.color,"Lives: ","16px Arial"),this.rightPressed=!1,this.leftPressed=!1,this.setup(),this.draw()}setup(){this.livesLabel.value=3,this.resetBallAndPaddle(),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1),document.addEventListener("mousemove",this.mouseMoveHandler.bind(this),!1)}resetBallAndPaddle(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.dx=2,this.ball.dy=-2,this.paddle.x=this.paddleXStart}collisionDetection(){for(let t=0;t<this.bricks.cols;t+=1)for(let s=0;s<this.bricks.rows;s+=1){const i=this.bricks.bricks[t][s];1===i.status&&this.ball.x>i.x&&this.ball.x<i.x+this.brickWidth&&this.ball.y>i.y&&this.ball.y<i.y+this.brickHeight&&(this.ball.dy=-this.ball.dy,i.status=0,this.scoreLabel.value+=1,this.scoreLabel.value===this.bricks.rows*this.bricks.cols&&(alert("YOU WIN, CONGRATS!"),document.location.reload()))}}checkKeys(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveBy(7,0):this.leftPressed&&this.paddle.x>0&&this.paddle.moveBy(-7,0)}collisionWithCanvas(){(this.ball.x+this.ball.dx>this.canvas.width-this.ball.radius||this.ball.x+this.ball.dx<this.ball.radius)&&(this.ball.dx=-this.ball.dx),this.ball.y+this.ball.dy<this.ball.radius?this.ball.dy=-this.ball.dy:this.ball.y+this.ball.dy>this.canvas.height-this.ball.radius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddleWidth?this.ball.dy=-this.ball.dy:(this.livesLabel.value-=1,this.livesLabel.value<1?(alert("GAME OVER"),document.location.reload()):this.resetBallAndPaddle()))}keyDownHandler(t){t.code===this.ARROW_RIGHT?this.rightPressed=!0:t.code===this.ARROW_LEFT&&(this.leftPressed=!0)}keyUpHandler(t){t.code===this.ARROW_RIGHT?this.rightPressed=!1:t.code===this.ARROW_LEFT&&(this.leftPressed=!1)}mouseMoveHandler(t){const s=t.clientX-this.canvas.offsetLeft;s>0&&s<this.canvas.width&&this.paddle.moveTo(s-this.paddle.width/2,this.paddleYStart)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bricks.render(this.ctx),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.scoreLabel.render(this.ctx),this.livesLabel.render(this.ctx),this.collisionDetection(),this.collisionWithCanvas(),this.ball.move(),this.checkKeys(),requestAnimationFrame((()=>{this.draw()}))}}("myCanvas")})();